#!/usr/bin/env bash
realpath() {
  # thx to https://github.com/whatwg/html-build/issues/90
  OURPWD=$PWD
  cd "$(dirname "$1")"
  LINK=$(readlink "$(basename "$1")")
  while [ "$LINK" ]; do
    cd "$(dirname "$LINK")"
    LINK=$(readlink "$(basename "$1")")
  done
  REALPATH="$PWD/$(basename "$1")"
  cd "$OURPWD"
  echo "$REALPATH"
}
# realpath "$@"

home="$(realpath "$(realpath "${BASH_SOURCE[0]}" | xargs dirname)"/.)"
echo "home is $home"
# cd "$home"


# Below lines copied and adjusted from https://github.com/JoshuaWise/better-sqlite3, filee
# `/deps/download.sh`:

# for SQLITE_MAX_ATTACHED see https://sqlite.org/limits.html "Maximum Number Of Attached Databases"

# SQLITE_OMIT_SHARED_CACHE



DEFINES="
SQLITE_CASE_SENSITIVE_LIKE
SQLITE_DQS=0
SQLITE_LIKE_DOESNT_MATCH_BLOBS
SQLITE_THREADSAFE=2
SQLITE_USE_URI=1
SQLITE_DEFAULT_MEMSTATUS=0
SQLITE_OMIT_DEPRECATED
SQLITE_OMIT_GET_TABLE
SQLITE_OMIT_TCL_VARIABLE
SQLITE_OMIT_PROGRESS_CALLBACK
SQLITE_TRACE_SIZE_LIMIT=32
SQLITE_DEFAULT_CACHE_SIZE=-16000
SQLITE_DEFAULT_FOREIGN_KEYS=1
SQLITE_DEFAULT_WAL_SYNCHRONOUS=1
SQLITE_ENABLE_MATH_FUNCTIONS
SQLITE_ENABLE_DESERIALIZE
SQLITE_ENABLE_COLUMN_METADATA
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
SQLITE_ENABLE_STAT4
SQLITE_ENABLE_FTS3_PARENTHESIS
SQLITE_ENABLE_FTS3
SQLITE_ENABLE_FTS4
SQLITE_ENABLE_FTS5
SQLITE_ENABLE_JSON1
SQLITE_ENABLE_RTREE
SQLITE_ENABLE_GEOPOLY
SQLITE_INTROSPECTION_PRAGMAS
SQLITE_SOUNDEX
HAVE_STDINT_H=1
HAVE_INT8_T=1
HAVE_INT16_T=1
HAVE_INT32_T=1
HAVE_UINT8_T=1
HAVE_UINT16_T=1
HAVE_UINT32_T=1
SQLITE_MAX_ATTACHED=125
"

CFLAGS=`echo $(echo "$DEFINES" | sed -e "/^\s*$/d" -e "s/^/-D/")`
export CFLAGS

echo "$CFLAGS"

# npm install better-sqlite3@'^7.5.1' --production --no-save --build-from-source --sqlite3="$home/sqlite-amalgamation-3380200"
# npm install better-sqlite3@'^7.4.3' --no-save --build-from-source --sqlite3="$(pwd)/sqlite-snapshot-202107191400"

# git clone https://github.com/sqlite/sqlite
# ( cd sqlite && git pull && git reset --hard version-3.38.5 )

update_existing_sqlite() {
  git fetch origin
  git checkout master
  git reset --hard origin/master; }

get_most_recent_tag() {
  git log --date-order --tags --simplify-by-decoration --pretty="format:%ai %d" \
    | grep -Pi 'version-' \
    | head -n 1 \
    | sed -E 's/^.*(version-[0-9.]+).*$/\1/'; }

cd sqlite
update_existing_sqlite
get_most_recent_tag

# ( mkdir -p build && cd build && ../sqlite/configure )
# make


